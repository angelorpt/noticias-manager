version: "3.8"

networks:
  app-network:
    driver: bridge

services:
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: dblaravel
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - .docker/postgres/data:/var/lib/postgresql/data
    networks:
      - app-network

  app-laravel:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: laravel8-php-fpm-80
    container_name: app
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./api:/var/www
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=dblaravel
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    networks:
      - app-network
    depends_on:
      - postgres
      - elastic

  app-nginx:
    image: nginx:1.19.8-alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - 8100:80
    volumes:
      - ./api:/var/www
      - ./nginx/conf:/etc/nginx/conf.d
    networks:
      - app-network

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: elastic
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - .docker/elastic/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.1
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elastic:9200
    ports:
      - 5601:5601
    networks:
      - app-network
    links:
      - elastic

  # cerebro:
  #   image: lmenezes/cerebro:latest
  #   container_name: cerebro
  #   ports:
  #     - 9000:9000
  #   links:
  #     - elastic
  #   networks:
  #     - app-network

  node:
    build:
      context: ./integrator
      target: dev
    container_name: node
    volumes:
      - ./integrator:/src
    command: npm run start:dev
    ports:
      - 3000:3000
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
    networks:
      - app-network
    links:
      - postgres
      - app-laravel
      - elastic

  quasar:
    build:
      context: ./quasar
      target: dev
    container_name: quasar
    ports:
      - 8080:8080
    volumes:
      - ./quasar:/app
    command: /bin/sh -c "yarn && quasar dev watch"
    depends_on:
      - app-laravel
